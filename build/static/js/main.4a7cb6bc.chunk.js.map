{"version":3,"sources":["Components/Player.js","services.js","Components/CommentsList.js","Pages/AudioPage.js","App.js","reportWebVitals.js","index.js"],"names":["Player","props","useState","playing","setPlaying","wavesurferObject","setWavesurferObject","duration","setDuration","waveformRef","useRef","canvasRef","timelineCommentRef","username","setUsername","comment","setComment","timestamp","setTimestamp","minute","setMinute","second","setSecond","handlePlay","pause","play","useEffect","canvas","current","width","style","height","offsetWidth","offsetHeight","fitToContainer","ctx","getContext","timelineComments","img","Image","src","avatar","alt","className","onload","console","log","x","drawImage","wavesurfer","WaveSurfer","create","container","waveColor","progressColor","barWidth","cursorColor","closeAudioContext","responsive","load","on","durationData","parseInt","getDuration","setVolume","destroy","progress","time","minuteInput","Math","floor","secondInput","onClick","ref","type","value","onChange","e","target","placeholder","getCurrentTime","preventDefault","fetch","method","headers","Headers","body","JSON","stringify","catch","Promise","reject","error","then","response","ok","json","createComment","fetchComments","err","CommentsList","commentsList","map","_id","AudioPage","comments","setComments","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAKaA,EAAS,SAACC,GACnB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgDF,qBAAhD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAgCJ,qBAAhC,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAcC,mBACdC,EAAYD,mBACZE,EAAqBF,mBAC3B,EAAgCR,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA8BZ,mBAAS,IAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAAkCd,mBAAS,IAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAA4BhB,mBAAS,GAArC,mBAAOiB,EAAP,KAAeC,EAAf,KACA,EAA4BlB,mBAAS,GAArC,mBAAOmB,EAAP,KAAeC,EAAf,KA2GA,SAASC,IACDpB,EACAE,EAAiBmB,QAEjBnB,EAAiBoB,OAErBrB,GAAYD,GAqBhB,OAtGAuB,qBAAU,WACN,IAAMC,EAAShB,EAAUiB,QACnBC,EA2BV,SAAwBF,GAOpB,OALAA,EAAOG,MAAMD,MAAO,OACpBF,EAAOG,MAAMC,OAAO,KAEpBJ,EAAOE,MAASF,EAAOK,YACvBL,EAAOI,OAASJ,EAAOM,aAChBN,EAAOE,MAlCAK,CAAeP,GACvBQ,EAAMR,EAAOS,WAAW,MAE9B,GAAInC,EAAMoC,iBAAkB,CAAC,IAAD,gBACJpC,EAAMoC,kBADF,yBACftB,EADe,QAEduB,EAAM,IAAIC,MAChBD,EAAIE,IAAMzB,EAAQ0B,OAClBH,EAAII,IAAM,GACVJ,EAAIK,UAAY5B,EAAQE,UACxBqB,EAAIM,OAAS,WACTC,QAAQC,IAAI,YAAaR,EAAIE,KAC7BK,QAAQC,IAAI,WAAYvC,GACxB,IAAMwC,EAAIhC,EAAQE,UAAYV,EAAWsB,EACzCM,EAAIa,UAAUV,EAAKS,EAAG,KAT9B,2BAA6C,IADrB,mCAkChCrB,qBAAU,WACN,GAAGjB,EAAYmB,QAAS,CACpB,IAAMqB,EAAaC,IAAWC,OAAO,CACjCC,UAAW3C,EAAYmB,QACvByB,UAAW,QACXC,cAAe,UACfC,SAAU,EACVxB,OAAQ,IACRyB,YAAa,cACbC,mBAAmB,EACnBC,YAAY,IAShB,OAPApD,EAAoB2C,GACpBA,EAAWU,KAAK,gDAChBV,EAAWW,GAAG,SAAS,WACnB,IAAMC,EAAeC,SAASb,EAAWc,eACzCvD,EAAYqD,GACZZ,EAAWe,UAAU,OAElB,kBAAM,EAAO,EAAKf,WAAWrB,QAAQqC,UAAY,SAE7D,IAEHvC,qBAAU,WACY,KAAdT,GACAZ,EAAiBuD,GAAG,QAAQ,SAASM,GACjC,IAAMC,EAAO9D,EAAiB0D,cAAgBG,EAC9ChD,EAAaiD,GACb,IAAMC,EAAcC,KAAKC,MAAMH,EAAO,IACtC/C,EAAUgD,GACV,IAAMG,EAAcF,KAAKC,MAAMH,EAAO,IACtC7C,EAAUiD,SAiClB,sBAAK5B,UAAU,GAAf,UACI,sBAAKA,UAAU,eAAf,UACI,gCACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,OAAf,UACI,mBAAGA,UAAU,SAAb,4BACA,mBAAGA,UAAU,aAAb,iCAEFxC,EAGF,mBAAGwC,UAAU,uBAAuB6B,QAASjD,IAF7C,mBAAGoB,UAAU,sBAAsB6B,QAASjD,OAKhD,sBAAKoB,UAAU,eAAf,UACI,qBAAKA,UAAU,WAAW8B,IAAKhE,IAC/B,wBAAQkC,UAAU,SAAS8B,IAAK9D,EAAWkB,MAAM,QAAQE,OAAO,eAKxE,qBAAKY,UAAU,oBAAf,SACI,qBAAKA,UAAU,cAAcH,IAAI,uDAAuDE,IAAI,UAGpG,mBAAGC,UAAU,mBAAmB8B,IAAK7D,IACrC,sBAAK+B,UAAU,oBAAf,UACI,uBAAO+B,KAAK,OAAOC,MAAO9D,EAAU+D,SAjKhD,SAA8BC,GAC1B/D,EAAY+D,EAAEC,OAAOH,QAgKuDhC,UAAU,WAAWoC,YAAY,aACrG,uBAAOL,KAAK,OAAOC,MAAO5D,EAAS6D,SA9J/C,SAA6BC,GACzB,GAAkB,KAAd5D,EAAkB,CAClB,IAAMkD,EAAO9D,EAAiB2E,iBAC9BnC,QAAQC,IAAI,YAAaqB,GACzBjD,EAAaiD,GACb,IAAMC,EAAcC,KAAKC,MAAMH,EAAO,IACtC/C,EAAUgD,GACV,IAAMG,EAAcF,KAAKC,MAAMH,EAAO,IACtC7C,EAAUiD,GAEdvD,EAAW6D,EAAEC,OAAOH,QAoJsDhC,UAAU,UAAUoC,YAAY,oBAClG,wCACA,uBAAOL,KAAK,OAAOC,MAAOxD,EAAQyD,SAnJ9C,SAA4BC,GACxB,IAAMT,EAAcN,SAASe,EAAEC,OAAOH,OACtCvD,EAAUgD,GAEVlD,EADmC,GAAdkD,EAAmB/C,IAgJgC0D,YAAY,WAC5E,uCACA,uBAAOL,KAAK,OAAOC,MAAOtD,EAAQuD,SA9I9C,SAA4BC,GACxB,IAAMN,EAAcT,SAASe,EAAEC,OAAOH,OACtCrD,EAAUiD,GAEVrD,EAD8B,GAATC,EAAcoD,IA2IqCQ,YAAY,WAC5E,uBAAOL,KAAK,SAASC,MAAM,OAAOH,QApD9C,SAA6BK,GACzBA,EAAEI,iBCrImB,SAACpE,EAAUE,EAASE,GAC7C,OAAOiE,MAAM,eAAiB,CAC5BC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACnB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAE3E,WAAUE,UAASE,gBAE3CwE,OAAO,kBAAMC,QAAQC,OAAO,CAAEC,MAAO,qBACrCC,MAAM,SAAAC,GACL,OAAGA,EAASC,GACHD,EAASE,OAEXF,EAASE,OAAOH,MAAM,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,SDyHlDC,CAAcpF,EAAUE,EAASE,GAChC4E,MAAK,WACFhD,QAAQC,IAAI,WACZhC,EAAY,IACZE,EAAW,IACXE,EAAa,IACbjB,EAAMiG,mBAETT,OAAO,SAAAU,GACJtD,QAAQC,IAAI,6BAyCwDH,UAAU,gBEtL7EyD,EAAe,SAACnG,GACzB,OACI,mCACI,oBAAI0C,UAAU,gBAAd,SACK1C,EAAMoG,aAAepG,EAAMoG,aAAaC,KAAI,SAACvF,GAC1C,OAAQ,+BACJ,sBAAK4B,UAAU,OAAf,UACI,qBAAKH,IAAKzB,EAAQ0B,OAAQC,IAAI,GAAGC,UAAU,WAC3C,uBAAMA,UAAU,WAAhB,UAA4B5B,EAAQF,SAApC,OACA,sBAAM8B,UAAU,KAAhB,kBACA,sBAAMA,UAAU,SAAhB,SAA0B0B,KAAKC,MAAMvD,EAAQE,UAAY,MACzD,uCACA,+BAAOoD,KAAKC,MAAMvD,EAAQE,UAAY,SAE1C,4BAAIF,EAAQA,YATCA,EAAQwF,QAYxB,UCdRC,EAAY,WACrB,MAAgCtG,mBAAS,IAAzC,mBAAOuG,EAAP,KAAiBC,EAAjB,KAEAhF,qBAAW,WACPwE,MACD,IAEH,IAAMA,EAAgB,WFMjBhB,MAAM,gBAAkB,CAC7BC,OAAQ,QAETM,OAAO,kBAAMC,QAAQC,OAAO,CAAEC,MAAO,qBACrCC,MAAM,SAAAC,GACL,OAAGA,EAASC,GACHD,EAASE,OAEXF,EAASE,OAAOH,MAAM,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,SEZ/CH,MAAK,SAACc,GACHD,EAAYC,MAEflB,OAAO,SAAAU,GACJtD,QAAQC,IAAI,6BAMpB,OACI,gCACI,cAAC,EAAD,CAAQoD,cAAeA,EAAe7D,iBAAkBoE,EAASpE,mBACjE,cAAC,EAAD,CAAcgE,aAAcI,EAASJ,mBChBlCO,MARf,WACE,OACE,qBAAKjE,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4a7cb6bc.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport WaveSurfer from \"wavesurfer.js\";\r\nimport { createComment } from \"../services\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nexport const Player = (props) => {\r\n    const [playing, setPlaying] = useState(false);\r\n    const [wavesurferObject, setWavesurferObject] = useState();\r\n    const [duration, setDuration] = useState();\r\n    const waveformRef = useRef();\r\n    const canvasRef = useRef();\r\n    const timelineCommentRef = useRef();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [timestamp, setTimestamp] = useState(\"\");\r\n    const [minute, setMinute] = useState(0);\r\n    const [second, setSecond] = useState(0);\r\n    function handleChangeUsername(e) {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    function handleChangeComment(e) {\r\n        if (timestamp === \"\") {\r\n            const time = wavesurferObject.getCurrentTime();\r\n            console.log(\"timestamp\", time);\r\n            setTimestamp(time);\r\n            const minuteInput = Math.floor(time / 60);\r\n            setMinute(minuteInput);\r\n            const secondInput = Math.floor(time % 60);\r\n            setSecond(secondInput);\r\n        } \r\n        setComment(e.target.value);\r\n    }\r\n\r\n    function handleChangeMinute(e) {\r\n        const minuteInput = parseInt(e.target.value);\r\n        setMinute(minuteInput);\r\n        const newTimestamp = minuteInput * 60 + second;\r\n        setTimestamp(newTimestamp);\r\n    }\r\n\r\n    function handleChangeSecond(e) {\r\n        const secondInput = parseInt(e.target.value);\r\n        setSecond(secondInput);\r\n        const newTimestamp = minute * 60 + secondInput;\r\n        setTimestamp(newTimestamp);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const width = fitToContainer(canvas);\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        if (props.timelineComments) {\r\n            for (let comment of props.timelineComments) {\r\n                const img = new Image();\r\n                img.src = comment.avatar;\r\n                img.alt = \"\";\r\n                img.className = comment.timestamp;\r\n                img.onload = function() {\r\n                    console.log(\"load done\", img.src);\r\n                    console.log(\"duration\", duration)\r\n                    const x = comment.timestamp / duration * width;\r\n                    ctx.drawImage(img, x, 0);\r\n                }\r\n            }\r\n            /*canvas.addEventListener(\"mouseenter\", (e) => {\r\n                e.stopPropagation();\r\n                const text = props.timelineComments[e.target.className];\r\n                timelineCommentRef.current.innerText = text;\r\n            });\r\n            canvas.addEventListener(\"mouseleave\", (e) => {\r\n                timelineCommentRef.current.innerText = \"\";\r\n            });*/\r\n        } \r\n    })\r\n\r\n    function fitToContainer(canvas){\r\n        // Make it visually fill the positioned parent\r\n        canvas.style.width ='100%';\r\n        canvas.style.height='5%';\r\n        // ...then set the internal size to match\r\n        canvas.width  = canvas.offsetWidth;\r\n        canvas.height = canvas.offsetHeight;\r\n        return canvas.width;\r\n      }\r\n\r\n    useEffect(() => {\r\n        if(waveformRef.current) {\r\n            const wavesurfer = WaveSurfer.create({\r\n                container: waveformRef.current,\r\n                waveColor: 'white',\r\n                progressColor: '#FF8000',\r\n                barWidth: 2,\r\n                height: 400,\r\n                cursorColor: 'transparent',\r\n                closeAudioContext: true,\r\n                responsive: true,\r\n            });\r\n            setWavesurferObject(wavesurfer);\r\n            wavesurfer.load('514386__kevin-manickam__relaxation-sound.wav');\r\n            wavesurfer.on(\"ready\", function() {\r\n                const durationData = parseInt(wavesurfer.getDuration());\r\n                setDuration(durationData);\r\n                wavesurfer.setVolume(0.5);\r\n            });\r\n            return () => this ? this.wavesurfer.current.destroy() : null;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (timestamp !== \"\") {\r\n            wavesurferObject.on(\"seek\", function(progress) {\r\n                const time = wavesurferObject.getDuration() * progress;\r\n                setTimestamp(time);\r\n                const minuteInput = Math.floor(time / 60);\r\n                setMinute(minuteInput);\r\n                const secondInput = Math.floor(time % 60);\r\n                setSecond(secondInput);\r\n            });\r\n        }\r\n    })\r\n\r\n    function handlePlay() {\r\n        if (playing) {\r\n            wavesurferObject.pause();\r\n        } else {\r\n            wavesurferObject.play();\r\n        }\r\n        setPlaying(!playing);\r\n    }\r\n\r\n    function handleSubmitComment(e) {\r\n        e.preventDefault();\r\n        createComment(username, comment, timestamp)\r\n        .then(() => {\r\n            console.log(\"success\");\r\n            setUsername(\"\");\r\n            setComment(\"\");\r\n            setTimestamp(\"\")\r\n            props.fetchComments();\r\n        })\r\n        .catch( err => {\r\n            console.log(\"error sending comment\");\r\n            //setStatus(err.error);\r\n            //setIsPending(false);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"player-panel\">\r\n                <div>\r\n                    <div className=\"audio-info\">\r\n                        <div className=\"info\">\r\n                            <p className=\"artist\">Kevin Manickam</p>\r\n                            <p className=\"audio-name\">Relaxation Music</p>\r\n                        </div>\r\n                        {!playing ?\r\n                        <i className=\"fa fa-play-circle-o\" onClick={handlePlay}></i>\r\n                            :\r\n                        <i className=\"fa fa-pause-circle-o\" onClick={handlePlay}></i>\r\n                        }\r\n                    </div>\r\n                    <div className=\"canvas-panel\">                 \r\n                        <div className=\"waveform\" ref={waveformRef}></div>\r\n                        <canvas className=\"canvas\" ref={canvasRef} width=\"50rem\" height=\"1rem\">\r\n                        </canvas>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"audio-image-panel\">\r\n                    <img className=\"audio-image\" src=\"https://i.ytimg.com/vi/6lt2JfJdGSY/maxresdefault.jpg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <p className=\"timeline-comment\" ref={timelineCommentRef}></p>\r\n            <div className=\"add-comment-panel\">\r\n                <input type=\"text\" value={username} onChange={handleChangeUsername} className=\"username\" placeholder=\"Username\"/>\r\n                <input type=\"text\" value={comment} onChange={handleChangeComment} className=\"comment\" placeholder=\"Write a comment\"/>\r\n                <span> at </span>\r\n                <input type=\"text\" value={minute} onChange={handleChangeMinute} placeholder=\"Minute\" />\r\n                <span> : </span>\r\n                <input type=\"text\" value={second} onChange={handleChangeSecond} placeholder=\"Second\" />\r\n                <input type=\"submit\" value=\"Post\" onClick={handleSubmitComment} className=\"post\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}","export const createComment = (username, comment, timestamp) => {\r\n    return fetch('/api/comment',  {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        'content-type': 'application/json',\r\n      }),\r\n      body: JSON.stringify({ username, comment, timestamp }),\r\n    })\r\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\r\n    .then( response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return response.json().then( json => Promise.reject(json) );\r\n    });\r\n  }\r\n\r\nexport const getComments = () => {\r\n  return fetch('/api/comments',  {\r\n    method: 'GET',\r\n  })\r\n  .catch( () => Promise.reject({ error: 'network-error'} ) )\r\n  .then( response => {\r\n    if(response.ok) {\r\n      return response.json();\r\n    }\r\n    return response.json().then( json => Promise.reject(json) );\r\n  });\r\n};\r\n","import React from 'react';\r\n\r\nexport const CommentsList = (props) => {\r\n    return (\r\n        <>\r\n            <ul className=\"comments-list\">\r\n                {props.commentsList ? props.commentsList.map((comment) => {\r\n                    return (<li key={comment._id}>\r\n                        <div className=\"info\">\r\n                            <img src={comment.avatar} alt=\"\" className=\"avatar\"/>\r\n                            <span className=\"username\">{comment.username} </span>\r\n                            <span className=\"at\"> at </span>\r\n                            <span className=\"minute\">{Math.floor(comment.timestamp / 60)}</span>\r\n                            <span> : </span>\r\n                            <span>{Math.floor(comment.timestamp % 60)}</span>\r\n                        </div>\r\n                        <p>{comment.comment}</p>\r\n                    </li>)\r\n\r\n                }) : null}\r\n            </ul>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Player } from '../Components/Player';\r\nimport { CommentsList } from '../Components/CommentsList';\r\nimport { getComments } from '../services';\r\n\r\nexport const AudioPage = () => {\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useEffect (() => {\r\n        fetchComments();\r\n    }, [])\r\n    \r\n    const fetchComments = () => {\r\n        getComments()\r\n        .then((data) => {\r\n            setComments(data);\r\n        })\r\n        .catch( err => {\r\n            console.log(\"error getting comment\");\r\n            //setStatus(err.error);\r\n            //setIsPending(false);\r\n        });    \r\n    }    \r\n\r\n    return (\r\n        <div>\r\n            <Player fetchComments={fetchComments} timelineComments={comments.timelineComments}/>\r\n            <CommentsList commentsList={comments.commentsList} />\r\n        </div>\r\n    )\r\n}","import './App.css';\r\nimport { AudioPage } from './Pages/AudioPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AudioPage/> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}